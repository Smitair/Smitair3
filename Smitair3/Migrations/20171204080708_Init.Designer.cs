// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SmitairDOTNET.DAL;
using System;

namespace Smitair3.Migrations
{
    [DbContext(typeof(SmitairDbContext))]
    [Migration("20171204080708_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmitairDOTNET.Models.Comment", b =>
                {
                    b.Property<int>("CommentsID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorID");

                    b.Property<int>("EffectID");

                    b.Property<string>("Text");

                    b.HasKey("CommentsID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SmitairDOTNET.Models.Effect", b =>
                {
                    b.Property<int>("EffectID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorID");

                    b.Property<double>("AvgGrade");

                    b.Property<int>("CountGrade");

                    b.Property<string>("Description");

                    b.Property<string>("EffectLink");

                    b.Property<string>("EffectName");

                    b.Property<int?>("UserID");

                    b.Property<string>("YoutubeLink");

                    b.HasKey("EffectID");

                    b.HasIndex("UserID");

                    b.ToTable("Effects");
                });

            modelBuilder.Entity("SmitairDOTNET.Models.Purchase", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EffectID");

                    b.Property<int>("Grade");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("EffectID");

                    b.HasIndex("UserID");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SmitairDOTNET.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvatarLink");

                    b.Property<string>("EmailAdress")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmitairDOTNET.Models.Effect", b =>
                {
                    b.HasOne("SmitairDOTNET.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("SmitairDOTNET.Models.Purchase", b =>
                {
                    b.HasOne("SmitairDOTNET.Models.Effect", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectID");

                    b.HasOne("SmitairDOTNET.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
